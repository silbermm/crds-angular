//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinistryPlatform.Translation.PlatformService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteOption", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class DeleteOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.DeleteAction ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NewRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.DeleteAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> NewRecordId {
            get {
                return this.NewRecordIdField;
            }
            set {
                if ((this.NewRecordIdField.Equals(value) != true)) {
                    this.NewRecordIdField = value;
                    this.RaisePropertyChanged("NewRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteAction", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum DeleteAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reassign = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldValue", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class FieldValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.UpdateOption OptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.UpdateOption Option {
            get {
                return this.OptionField;
            }
            set {
                if ((this.OptionField.Equals(value) != true)) {
                    this.OptionField = value;
                    this.RaisePropertyChanged("Option");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateOption", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum UpdateOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Append = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateOnly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeOnly = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectQueryResult", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class SelectQueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[][] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.FieldInfo[] FieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[][] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.FieldInfo[] Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedRecords {
            get {
                return this.SelectedRecordsField;
            }
            set {
                if ((this.SelectedRecordsField.Equals(value) != true)) {
                    this.SelectedRecordsField = value;
                    this.RaisePropertyChanged("SelectedRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldInfo", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.ExtendedFieldInfo))]
    public partial class FieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.DataTypes DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.DataTypes DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedFieldInfo", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class ExtendedFieldInfo : MinistryPlatform.Translation.PlatformService.FieldInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ForeignPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsForeignKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRestrictedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ForeignPageId {
            get {
                return this.ForeignPageIdField;
            }
            set {
                if ((this.ForeignPageIdField.Equals(value) != true)) {
                    this.ForeignPageIdField = value;
                    this.RaisePropertyChanged("ForeignPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForeignKey {
            get {
                return this.IsForeignKeyField;
            }
            set {
                if ((this.IsForeignKeyField.Equals(value) != true)) {
                    this.IsForeignKeyField = value;
                    this.RaisePropertyChanged("IsForeignKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimaryKey {
            get {
                return this.IsPrimaryKeyField;
            }
            set {
                if ((this.IsPrimaryKeyField.Equals(value) != true)) {
                    this.IsPrimaryKeyField = value;
                    this.RaisePropertyChanged("IsPrimaryKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired {
            get {
                return this.IsRequiredField;
            }
            set {
                if ((this.IsRequiredField.Equals(value) != true)) {
                    this.IsRequiredField = value;
                    this.RaisePropertyChanged("IsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRestricted {
            get {
                return this.IsRestrictedField;
            }
            set {
                if ((this.IsRestrictedField.Equals(value) != true)) {
                    this.IsRestrictedField = value;
                    this.RaisePropertyChanged("IsRestricted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTypes", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum DataTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xml = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Byte = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer16 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer32 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer64 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Real = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Time = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timestamp = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Binary = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Password = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Money = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guid = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Variant = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Separator = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 22,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.SubpageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.Subpage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.View))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.Bookmark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.PageSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.PageSectionPage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.Page))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.Report))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.Tool))]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubpageItem", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MinistryPlatform.Translation.PlatformService.Subpage))]
    public partial class SubpageItem : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageLayouts LayoutsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkedRecordFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.RelationshipType ParentPageRelationshipTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageLayouts Layouts {
            get {
                return this.LayoutsField;
            }
            set {
                if ((this.LayoutsField.Equals(value) != true)) {
                    this.LayoutsField = value;
                    this.RaisePropertyChanged("Layouts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkedRecordFieldName {
            get {
                return this.LinkedRecordFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedRecordFieldNameField, value) != true)) {
                    this.LinkedRecordFieldNameField = value;
                    this.RaisePropertyChanged("LinkedRecordFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.RelationshipType ParentPageRelationshipType {
            get {
                return this.ParentPageRelationshipTypeField;
            }
            set {
                if ((this.ParentPageRelationshipTypeField.Equals(value) != true)) {
                    this.ParentPageRelationshipTypeField = value;
                    this.RaisePropertyChanged("ParentPageRelationshipType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subpage", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Subpage : MinistryPlatform.Translation.PlatformService.SubpageItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatePivotFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultViewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrimaryPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.Item[] SelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SingularNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.View[] ViewsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatePivotFieldName {
            get {
                return this.DatePivotFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatePivotFieldNameField, value) != true)) {
                    this.DatePivotFieldNameField = value;
                    this.RaisePropertyChanged("DatePivotFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultViewId {
            get {
                return this.DefaultViewIdField;
            }
            set {
                if ((this.DefaultViewIdField.Equals(value) != true)) {
                    this.DefaultViewIdField = value;
                    this.RaisePropertyChanged("DefaultViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDateFieldName {
            get {
                return this.EndDateFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateFieldNameField, value) != true)) {
                    this.EndDateFieldNameField = value;
                    this.RaisePropertyChanged("EndDateFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageFileId {
            get {
                return this.ImageFileIdField;
            }
            set {
                if ((this.ImageFileIdField.Equals(value) != true)) {
                    this.ImageFileIdField = value;
                    this.RaisePropertyChanged("ImageFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrimaryPageId {
            get {
                return this.PrimaryPageIdField;
            }
            set {
                if ((this.PrimaryPageIdField.Equals(value) != true)) {
                    this.PrimaryPageIdField = value;
                    this.RaisePropertyChanged("PrimaryPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPageName {
            get {
                return this.PrimaryPageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPageNameField, value) != true)) {
                    this.PrimaryPageNameField = value;
                    this.RaisePropertyChanged("PrimaryPageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.Item[] Selections {
            get {
                return this.SelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionsField, value) != true)) {
                    this.SelectionsField = value;
                    this.RaisePropertyChanged("Selections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SingularName {
            get {
                return this.SingularNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SingularNameField, value) != true)) {
                    this.SingularNameField = value;
                    this.RaisePropertyChanged("SingularName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDateFieldName {
            get {
                return this.StartDateFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateFieldNameField, value) != true)) {
                    this.StartDateFieldNameField = value;
                    this.RaisePropertyChanged("StartDateFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.View[] Views {
            get {
                return this.ViewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewsField, value) != true)) {
                    this.ViewsField = value;
                    this.RaisePropertyChanged("Views");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="View", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class View : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUserViewField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserView {
            get {
                return this.IsUserViewField;
            }
            set {
                if ((this.IsUserViewField.Equals(value) != true)) {
                    this.IsUserViewField = value;
                    this.RaisePropertyChanged("IsUserView");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bookmark", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Bookmark : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewOrder {
            get {
                return this.ViewOrderField;
            }
            set {
                if ((this.ViewOrderField.Equals(value) != true)) {
                    this.ViewOrderField = value;
                    this.RaisePropertyChanged("ViewOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageSection", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class PageSection : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageSectionPage[] PagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageFileId {
            get {
                return this.ImageFileIdField;
            }
            set {
                if ((this.ImageFileIdField.Equals(value) != true)) {
                    this.ImageFileIdField = value;
                    this.RaisePropertyChanged("ImageFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageSectionPage[] Pages {
            get {
                return this.PagesField;
            }
            set {
                if ((object.ReferenceEquals(this.PagesField, value) != true)) {
                    this.PagesField = value;
                    this.RaisePropertyChanged("Pages");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageSectionPage", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class PageSectionPage : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageFileIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageFileId {
            get {
                return this.ImageFileIdField;
            }
            set {
                if ((this.ImageFileIdField.Equals(value) != true)) {
                    this.ImageFileIdField = value;
                    this.RaisePropertyChanged("ImageFileId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Page", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Page : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatePivotFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultViewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageLayouts LayoutsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PagePermissions PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PickListViewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.Report[] ReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.Item[] SelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SingularNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.SubpageItem[] SubpagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.Tool[] ToolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.View[] ViewsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatePivotFieldName {
            get {
                return this.DatePivotFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatePivotFieldNameField, value) != true)) {
                    this.DatePivotFieldNameField = value;
                    this.RaisePropertyChanged("DatePivotFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultViewId {
            get {
                return this.DefaultViewIdField;
            }
            set {
                if ((this.DefaultViewIdField.Equals(value) != true)) {
                    this.DefaultViewIdField = value;
                    this.RaisePropertyChanged("DefaultViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDateFieldName {
            get {
                return this.EndDateFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateFieldNameField, value) != true)) {
                    this.EndDateFieldNameField = value;
                    this.RaisePropertyChanged("EndDateFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageFileId {
            get {
                return this.ImageFileIdField;
            }
            set {
                if ((this.ImageFileIdField.Equals(value) != true)) {
                    this.ImageFileIdField = value;
                    this.RaisePropertyChanged("ImageFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageLayouts Layouts {
            get {
                return this.LayoutsField;
            }
            set {
                if ((this.LayoutsField.Equals(value) != true)) {
                    this.LayoutsField = value;
                    this.RaisePropertyChanged("Layouts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PagePermissions Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((this.PermissionsField.Equals(value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PickListViewId {
            get {
                return this.PickListViewIdField;
            }
            set {
                if ((this.PickListViewIdField.Equals(value) != true)) {
                    this.PickListViewIdField = value;
                    this.RaisePropertyChanged("PickListViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.Report[] Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportsField, value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.Item[] Selections {
            get {
                return this.SelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionsField, value) != true)) {
                    this.SelectionsField = value;
                    this.RaisePropertyChanged("Selections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SingularName {
            get {
                return this.SingularNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SingularNameField, value) != true)) {
                    this.SingularNameField = value;
                    this.RaisePropertyChanged("SingularName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDateFieldName {
            get {
                return this.StartDateFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateFieldNameField, value) != true)) {
                    this.StartDateFieldNameField = value;
                    this.RaisePropertyChanged("StartDateFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.SubpageItem[] Subpages {
            get {
                return this.SubpagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubpagesField, value) != true)) {
                    this.SubpagesField = value;
                    this.RaisePropertyChanged("Subpages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.Tool[] Tools {
            get {
                return this.ToolsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolsField, value) != true)) {
                    this.ToolsField = value;
                    this.RaisePropertyChanged("Tools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.View[] Views {
            get {
                return this.ViewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewsField, value) != true)) {
                    this.ViewsField = value;
                    this.RaisePropertyChanged("Views");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Report : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageFileId {
            get {
                return this.ImageFileIdField;
            }
            set {
                if ((this.ImageFileIdField.Equals(value) != true)) {
                    this.ImageFileIdField = value;
                    this.RaisePropertyChanged("ImageFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tool", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Tool : MinistryPlatform.Translation.PlatformService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageFileId {
            get {
                return this.ImageFileIdField;
            }
            set {
                if ((this.ImageFileIdField.Equals(value) != true)) {
                    this.ImageFileIdField = value;
                    this.RaisePropertyChanged("ImageFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageLayouts", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum PageLayouts : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Images = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Calendar = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gantt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timeline = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 31,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationshipType", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum RelationshipType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneToMany = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManyToMany = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManyToOne = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recursive = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageAccessLevel", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum PageAccessLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadWrite = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadWriteAssign = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadWriteAssignDelete = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagePermissions", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum PagePermissions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileAttach = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataImport = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataExport = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecureRecord = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddComment = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 31,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectionDescription", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class SelectionDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.SelectionKind KindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubpageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.SelectionKind Kind {
            get {
                return this.KindField;
            }
            set {
                if ((this.KindField.Equals(value) != true)) {
                    this.KindField = value;
                    this.RaisePropertyChanged("Kind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentRecordId {
            get {
                return this.ParentRecordIdField;
            }
            set {
                if ((this.ParentRecordIdField.Equals(value) != true)) {
                    this.ParentRecordIdField = value;
                    this.RaisePropertyChanged("ParentRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectionId {
            get {
                return this.SelectionIdField;
            }
            set {
                if ((this.SelectionIdField.Equals(value) != true)) {
                    this.SelectionIdField = value;
                    this.RaisePropertyChanged("SelectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubpageId {
            get {
                return this.SubpageIdField;
            }
            set {
                if ((this.SubpageIdField.Equals(value) != true)) {
                    this.SubpageIdField = value;
                    this.RaisePropertyChanged("SubpageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectionKind", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum SelectionKind : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Temporary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElevatedSecurity = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Traverse", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Traverse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.DependencyType DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetPageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.DependencyType Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetPageId {
            get {
                return this.TargetPageIdField;
            }
            set {
                if ((this.TargetPageIdField.Equals(value) != true)) {
                    this.TargetPageIdField = value;
                    this.RaisePropertyChanged("TargetPageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DependencyType", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum DependencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Upstream = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Downstream = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditMaster", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class AuditMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.AuditAction ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.AuditDetail[] DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.AuditAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.AuditDetail[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterId {
            get {
                return this.MasterIdField;
            }
            set {
                if ((this.MasterIdField.Equals(value) != true)) {
                    this.MasterIdField = value;
                    this.RaisePropertyChanged("MasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditAction", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum AuditAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Updated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Imported = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportUpdated = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MassUpdated = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstDupeCheck = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditDetail", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class AuditDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object NewValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PreviousIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object PreviousValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnDisplayName {
            get {
                return this.ColumnDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnDisplayNameField, value) != true)) {
                    this.ColumnDisplayNameField = value;
                    this.RaisePropertyChanged("ColumnDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailId {
            get {
                return this.DetailIdField;
            }
            set {
                if ((this.DetailIdField.Equals(value) != true)) {
                    this.DetailIdField = value;
                    this.RaisePropertyChanged("DetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterId {
            get {
                return this.MasterIdField;
            }
            set {
                if ((this.MasterIdField.Equals(value) != true)) {
                    this.MasterIdField = value;
                    this.RaisePropertyChanged("MasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NewId {
            get {
                return this.NewIdField;
            }
            set {
                if ((this.NewIdField.Equals(value) != true)) {
                    this.NewIdField = value;
                    this.RaisePropertyChanged("NewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PreviousId {
            get {
                return this.PreviousIdField;
            }
            set {
                if ((this.PreviousIdField.Equals(value) != true)) {
                    this.PreviousIdField = value;
                    this.RaisePropertyChanged("PreviousId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object PreviousValue {
            get {
                return this.PreviousValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousValueField, value) != true)) {
                    this.PreviousValueField = value;
                    this.RaisePropertyChanged("PreviousValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileDescription", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class FileDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ImageHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ImageWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UniqueFileIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImageHeight {
            get {
                return this.ImageHeightField;
            }
            set {
                if ((this.ImageHeightField.Equals(value) != true)) {
                    this.ImageHeightField = value;
                    this.RaisePropertyChanged("ImageHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImageWidth {
            get {
                return this.ImageWidthField;
            }
            set {
                if ((this.ImageWidthField.Equals(value) != true)) {
                    this.ImageWidthField = value;
                    this.RaisePropertyChanged("ImageWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefaultImage {
            get {
                return this.IsDefaultImageField;
            }
            set {
                if ((this.IsDefaultImageField.Equals(value) != true)) {
                    this.IsDefaultImageField = value;
                    this.RaisePropertyChanged("IsDefaultImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqueFileId {
            get {
                return this.UniqueFileIdField;
            }
            set {
                if ((this.UniqueFileIdField.Equals(value) != true)) {
                    this.UniqueFileIdField = value;
                    this.RaisePropertyChanged("UniqueFileId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationSnippet", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class CommunicationSnippet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SnippetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SnippetId {
            get {
                return this.SnippetIdField;
            }
            set {
                if ((this.SnippetIdField.Equals(value) != true)) {
                    this.SnippetIdField = value;
                    this.RaisePropertyChanged("SnippetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Communication", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Communication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommunicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplyToAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReplyToContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplyToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SelectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.CommunicationStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorUserId {
            get {
                return this.AuthorUserIdField;
            }
            set {
                if ((this.AuthorUserIdField.Equals(value) != true)) {
                    this.AuthorUserIdField = value;
                    this.RaisePropertyChanged("AuthorUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommunicationId {
            get {
                return this.CommunicationIdField;
            }
            set {
                if ((this.CommunicationIdField.Equals(value) != true)) {
                    this.CommunicationIdField = value;
                    this.RaisePropertyChanged("CommunicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromAddress {
            get {
                return this.FromAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FromAddressField, value) != true)) {
                    this.FromAddressField = value;
                    this.RaisePropertyChanged("FromAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromContactId {
            get {
                return this.FromContactIdField;
            }
            set {
                if ((this.FromContactIdField.Equals(value) != true)) {
                    this.FromContactIdField = value;
                    this.RaisePropertyChanged("FromContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromName {
            get {
                return this.FromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FromNameField, value) != true)) {
                    this.FromNameField = value;
                    this.RaisePropertyChanged("FromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyToAddress {
            get {
                return this.ReplyToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyToAddressField, value) != true)) {
                    this.ReplyToAddressField = value;
                    this.RaisePropertyChanged("ReplyToAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplyToContactId {
            get {
                return this.ReplyToContactIdField;
            }
            set {
                if ((this.ReplyToContactIdField.Equals(value) != true)) {
                    this.ReplyToContactIdField = value;
                    this.RaisePropertyChanged("ReplyToContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyToName {
            get {
                return this.ReplyToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyToNameField, value) != true)) {
                    this.ReplyToNameField = value;
                    this.RaisePropertyChanged("ReplyToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SelectionId {
            get {
                return this.SelectionIdField;
            }
            set {
                if ((this.SelectionIdField.Equals(value) != true)) {
                    this.SelectionIdField = value;
                    this.RaisePropertyChanged("SelectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.CommunicationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationStatus", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum CommunicationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InReview = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToSend = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationErrorInfo", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class ValidationErrorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWarningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWarning {
            get {
                return this.IsWarningField;
            }
            set {
                if ((this.IsWarningField.Equals(value) != true)) {
                    this.IsWarningField = value;
                    this.RaisePropertyChanged("IsWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationMessage", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class CommunicationMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommunicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommunicationMessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplyToAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.CommunicationMessageStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommunicationId {
            get {
                return this.CommunicationIdField;
            }
            set {
                if ((this.CommunicationIdField.Equals(value) != true)) {
                    this.CommunicationIdField = value;
                    this.RaisePropertyChanged("CommunicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommunicationMessageId {
            get {
                return this.CommunicationMessageIdField;
            }
            set {
                if ((this.CommunicationMessageIdField.Equals(value) != true)) {
                    this.CommunicationMessageIdField = value;
                    this.RaisePropertyChanged("CommunicationMessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromAddress {
            get {
                return this.FromAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FromAddressField, value) != true)) {
                    this.FromAddressField = value;
                    this.RaisePropertyChanged("FromAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyToAddress {
            get {
                return this.ReplyToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyToAddressField, value) != true)) {
                    this.ReplyToAddressField = value;
                    this.RaisePropertyChanged("ReplyToAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.CommunicationMessageStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusText {
            get {
                return this.StatusTextField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTextField, value) != true)) {
                    this.StatusTextField = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusTime {
            get {
                return this.StatusTimeField;
            }
            set {
                if ((this.StatusTimeField.Equals(value) != true)) {
                    this.StatusTimeField = value;
                    this.RaisePropertyChanged("StatusTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToAddress {
            get {
                return this.ToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ToAddressField, value) != true)) {
                    this.ToAddressField = value;
                    this.RaisePropertyChanged("ToAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationMessageStatus", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum CommunicationMessageStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToSend = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.TaskAction ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRejectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.TaskAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompleted {
            get {
                return this.IsCompletedField;
            }
            set {
                if ((this.IsCompletedField.Equals(value) != true)) {
                    this.IsCompletedField = value;
                    this.RaisePropertyChanged("IsCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRejected {
            get {
                return this.IsRejectedField;
            }
            set {
                if ((this.IsRejectedField.Equals(value) != true)) {
                    this.IsRejectedField = value;
                    this.RaisePropertyChanged("IsRejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskAction", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum TaskAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Submit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approve = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeRecord = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskCount", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class TaskCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.TaskAction ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.TaskAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolePage", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class RolePage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.FieldRestriction[] FieldRestrictionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnQuickAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PagePermissions PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.RoleSubpage[] SubpagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.FieldRestriction[] FieldRestrictions {
            get {
                return this.FieldRestrictionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldRestrictionsField, value) != true)) {
                    this.FieldRestrictionsField = value;
                    this.RaisePropertyChanged("FieldRestrictions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnQuickAdd {
            get {
                return this.IsOnQuickAddField;
            }
            set {
                if ((this.IsOnQuickAddField.Equals(value) != true)) {
                    this.IsOnQuickAddField = value;
                    this.RaisePropertyChanged("IsOnQuickAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PagePermissions Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((this.PermissionsField.Equals(value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.RoleSubpage[] Subpages {
            get {
                return this.SubpagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubpagesField, value) != true)) {
                    this.SubpagesField = value;
                    this.RaisePropertyChanged("Subpages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldRestriction", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class FieldRestriction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.ColumnAccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.ColumnAccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleSubpage", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class RoleSubpage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubpageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.PageAccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubpageId {
            get {
                return this.SubpageIdField;
            }
            set {
                if ((this.SubpageIdField.Equals(value) != true)) {
                    this.SubpageIdField = value;
                    this.RaisePropertyChanged("SubpageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColumnAccessLevel", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    public enum ColumnAccessLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadWrite = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://www.thinkministry.com/dataplatform/2012/10/")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinistryPlatform.Translation.PlatformService.Item[] ExternalIdentitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GenderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaritalStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrefixIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SuffixIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinistryPlatform.Translation.PlatformService.Item[] ExternalIdentities {
            get {
                return this.ExternalIdentitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdentitiesField, value) != true)) {
                    this.ExternalIdentitiesField = value;
                    this.RaisePropertyChanged("ExternalIdentities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GenderId {
            get {
                return this.GenderIdField;
            }
            set {
                if ((this.GenderIdField.Equals(value) != true)) {
                    this.GenderIdField = value;
                    this.RaisePropertyChanged("GenderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaritalStatusId {
            get {
                return this.MaritalStatusIdField;
            }
            set {
                if ((this.MaritalStatusIdField.Equals(value) != true)) {
                    this.MaritalStatusIdField = value;
                    this.RaisePropertyChanged("MaritalStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrefixId {
            get {
                return this.PrefixIdField;
            }
            set {
                if ((this.PrefixIdField.Equals(value) != true)) {
                    this.PrefixIdField = value;
                    this.RaisePropertyChanged("PrefixId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SuffixId {
            get {
                return this.SuffixIdField;
            }
            set {
                if ((this.SuffixIdField.Equals(value) != true)) {
                    this.SuffixIdField = value;
                    this.RaisePropertyChanged("SuffixId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZoneId {
            get {
                return this.TimeZoneIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneIdField, value) != true)) {
                    this.TimeZoneIdField = value;
                    this.RaisePropertyChanged("TimeZoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.thinkministry.com/dataplatform/2012/10/", ConfigurationName="PlatformService.PlatformService")]
    public interface PlatformService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreatePageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreatePageRecor" +
            "dResponse")]
        int CreatePageRecord(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreatePageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreatePageRecor" +
            "dResponse")]
        System.Threading.Tasks.Task<int> CreatePageRecordAsync(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdatePageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdatePageRecor" +
            "dResponse")]
        void UpdatePageRecord(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdatePageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdatePageRecor" +
            "dResponse")]
        System.Threading.Tasks.Task UpdatePageRecordAsync(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeletePageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeletePageRecor" +
            "dResponse")]
        void DeletePageRecord(int pageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeletePageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeletePageRecor" +
            "dResponse")]
        System.Threading.Tasks.Task DeletePageRecordAsync(int pageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cordResponse")]
        int CreateSubpageRecord(int subpageId, int parentRecordId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cordResponse")]
        System.Threading.Tasks.Task<int> CreateSubpageRecordAsync(int subpageId, int parentRecordId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cordsResponse")]
        int[] CreateSubpageRecords(int subpageId, int parentRecordId, int selectionId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSubpageRe" +
            "cordsResponse")]
        System.Threading.Tasks.Task<int[]> CreateSubpageRecordsAsync(int subpageId, int parentRecordId, int selectionId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSubpageRe" +
            "cord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSubpageRe" +
            "cordResponse")]
        void UpdateSubpageRecord(int subpageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSubpageRe" +
            "cord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSubpageRe" +
            "cordResponse")]
        System.Threading.Tasks.Task UpdateSubpageRecordAsync(int subpageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSubpageRe" +
            "cord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSubpageRe" +
            "cordResponse")]
        void DeleteSubpageRecord(int subpageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSubpageRe" +
            "cord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSubpageRe" +
            "cordResponse")]
        System.Threading.Tasks.Task DeleteSubpageRecordAsync(int subpageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "Records", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "RecordsResponse")]
        void UpdateSelectionRecords(int selectionId, MinistryPlatform.Translation.PlatformService.FieldValue[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "Records", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "RecordsResponse")]
        System.Threading.Tasks.Task UpdateSelectionRecordsAsync(int selectionId, MinistryPlatform.Translation.PlatformService.FieldValue[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "Records", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "RecordsResponse")]
        void DeleteSelectionRecords(int selectionId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "Records", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "RecordsResponse")]
        System.Threading.Tasks.Task DeleteSelectionRecordsAsync(int selectionId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyPageRecord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyPageRecordR" +
            "esponse")]
        void CopyPageRecord(int pageId, int recordId, int[] subpages, System.DateTime[] startDateTimes, bool updateOriginalRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyPageRecord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyPageRecordR" +
            "esponse")]
        System.Threading.Tasks.Task CopyPageRecordAsync(int pageId, int recordId, int[] subpages, System.DateTime[] startDateTimes, bool updateOriginalRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordRe" +
            "sponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageRecord(int pageId, int recordId, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecord", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordRe" +
            "sponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageRecordAsync(int pageId, int recordId, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageLookupRe" +
            "cords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageLookupRe" +
            "cordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageLookupRecords(int pageId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageLookupRe" +
            "cords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageLookupRe" +
            "cordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageLookupRecordsAsync(int pageId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageLooku" +
            "pRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageLooku" +
            "pRecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageLookupRecords(int subpageId, int parentRecordId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageLooku" +
            "pRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageLooku" +
            "pRecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageLookupRecordsAsync(int subpageId, int parentRecordId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordsR" +
            "esponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageRecords(int pageId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordsR" +
            "esponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageRecordsAsync(int pageId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageCalendar" +
            "Records", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageCalendar" +
            "RecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageCalendarRecords(int pageId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageCalendar" +
            "Records", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageCalendar" +
            "RecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageCalendarRecordsAsync(int pageId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewReco" +
            "rds", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewReco" +
            "rdsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageViewRecords(int viewId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewReco" +
            "rds", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewReco" +
            "rdsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageViewRecordsAsync(int viewId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewCale" +
            "ndarRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewCale" +
            "ndarRecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageViewCalendarRecords(int viewId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewCale" +
            "ndarRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageViewCale" +
            "ndarRecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageViewCalendarRecordsAsync(int viewId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "dResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageRecord(int subpageId, int recordId, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "d", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "dResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageRecordAsync(int subpageId, int recordId, bool quickAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "ds", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "dsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageRecords(int subpageId, int parentRecordId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "ds", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRecor" +
            "dsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageRecordsAsync(int subpageId, int parentRecordId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageCalen" +
            "darRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageCalen" +
            "darRecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageCalendarRecords(int subpageId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageCalen" +
            "darRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageCalen" +
            "darRecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageCalendarRecordsAsync(int subpageId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewR" +
            "ecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewR" +
            "ecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageViewRecords(int viewId, int parentRecordId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewR" +
            "ecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewR" +
            "ecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageViewRecordsAsync(int viewId, int parentRecordId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewC" +
            "alendarRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewC" +
            "alendarRecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageViewCalendarRecords(int viewId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewC" +
            "alendarRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageViewC" +
            "alendarRecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageViewCalendarRecordsAsync(int viewId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionRec" +
            "ords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionRec" +
            "ordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSelectionRecords(int selectionId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionRec" +
            "ords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionRec" +
            "ordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSelectionRecordsAsync(int selectionId, string search, string sort, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionCal" +
            "endarRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionCal" +
            "endarRecordsResponse")]
        MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSelectionCalendarRecords(int selectionId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionCal" +
            "endarRecords", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionCal" +
            "endarRecordsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSelectionCalendarRecordsAsync(int selectionId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddPage" +
            "s", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddPage" +
            "sResponse")]
        MinistryPlatform.Translation.PlatformService.Item[] GetQuickAddPages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddPage" +
            "s", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddPage" +
            "sResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Item[]> GetQuickAddPagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddSubp" +
            "ages", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddSubp" +
            "agesResponse")]
        MinistryPlatform.Translation.PlatformService.SubpageItem[] GetQuickAddSubpages(int pageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddSubp" +
            "ages", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetQuickAddSubp" +
            "agesResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SubpageItem[]> GetQuickAddSubpagesAsync(int pageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetBookmarks", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetBookmarksRes" +
            "ponse")]
        MinistryPlatform.Translation.PlatformService.Bookmark[] GetBookmarks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetBookmarks", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetBookmarksRes" +
            "ponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Bookmark[]> GetBookmarksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageSections" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageSections" +
            "Response")]
        MinistryPlatform.Translation.PlatformService.PageSection[] GetPageSections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageSections" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageSections" +
            "Response")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.PageSection[]> GetPageSectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPage", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageResponse" +
            "")]
        MinistryPlatform.Translation.PlatformService.Page GetPage(int pageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPage", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageResponse" +
            "")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Page> GetPageAsync(int pageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageBySystem" +
            "Name", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageBySystem" +
            "NameResponse")]
        MinistryPlatform.Translation.PlatformService.Page GetPageBySystemName(string systemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageBySystem" +
            "Name", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageBySystem" +
            "NameResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Page> GetPageBySystemNameAsync(string systemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpage", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRespo" +
            "nse")]
        MinistryPlatform.Translation.PlatformService.Subpage GetSubpage(int subpageId, int parentRecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpage", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageRespo" +
            "nse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Subpage> GetSubpageAsync(int subpageId, int parentRecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageBySys" +
            "temName", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageBySys" +
            "temNameResponse")]
        MinistryPlatform.Translation.PlatformService.Subpage GetSubpageBySystemName(string systemName, int parentRecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageBySys" +
            "temName", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageBySys" +
            "temNameResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Subpage> GetSubpageBySystemNameAsync(string systemName, int parentRecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSelection" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSelection" +
            "Response")]
        int CreateSelection(MinistryPlatform.Translation.PlatformService.SelectionDescription selection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSelection" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateSelection" +
            "Response")]
        System.Threading.Tasks.Task<int> CreateSelectionAsync(MinistryPlatform.Translation.PlatformService.SelectionDescription selection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "Name", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "NameResponse")]
        void UpdateSelectionName(int selectionId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "Name", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateSelection" +
            "NameResponse")]
        System.Threading.Tasks.Task UpdateSelectionNameAsync(int selectionId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "Response")]
        void DeleteSelection(int selectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteSelection" +
            "Response")]
        System.Threading.Tasks.Task DeleteSelectionAsync(int selectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionRes" +
            "ponse")]
        MinistryPlatform.Translation.PlatformService.SelectionDescription GetSelection(int selectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSelectionRes" +
            "ponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectionDescription> GetSelectionAsync(int selectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ClearSelections" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ClearSelections" +
            "Response")]
        void ClearSelections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ClearSelections" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ClearSelections" +
            "Response")]
        System.Threading.Tasks.Task ClearSelectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSelection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSelectionR" +
            "esponse")]
        int AddToSelection(int selectionId, bool quickAdd, int[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSelection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSelectionR" +
            "esponse")]
        System.Threading.Tasks.Task<int> AddToSelectionAsync(int selectionId, bool quickAdd, int[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/MoveToSelection" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/MoveToSelection" +
            "Response")]
        int MoveToSelection(int sourceSelectionId, int targetSelectionId, bool moveRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/MoveToSelection" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/MoveToSelection" +
            "Response")]
        System.Threading.Tasks.Task<int> MoveToSelectionAsync(int sourceSelectionId, int targetSelectionId, bool moveRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToPageSelect" +
            "ion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToPageSelect" +
            "ionResponse")]
        int AddToPageSelection(int selectionId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToPageSelect" +
            "ion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToPageSelect" +
            "ionResponse")]
        System.Threading.Tasks.Task<int> AddToPageSelectionAsync(int selectionId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/TransferToPageS" +
            "election", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/TransferToPageS" +
            "electionResponse")]
        int TransferToPageSelection(int sourceSelectionId, int targetSelectionId, MinistryPlatform.Translation.PlatformService.Traverse[] path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/TransferToPageS" +
            "election", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/TransferToPageS" +
            "electionResponse")]
        System.Threading.Tasks.Task<int> TransferToPageSelectionAsync(int sourceSelectionId, int targetSelectionId, MinistryPlatform.Translation.PlatformService.Traverse[] path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSubpageSel" +
            "ection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSubpageSel" +
            "ectionResponse")]
        int AddToSubpageSelection(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSubpageSel" +
            "ection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddToSubpageSel" +
            "ectionResponse")]
        System.Threading.Tasks.Task<int> AddToSubpageSelectionAsync(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSelec" +
            "tion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSelec" +
            "tionResponse")]
        int RemoveFromSelection(int selectionId, int[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSelec" +
            "tion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSelec" +
            "tionResponse")]
        System.Threading.Tasks.Task<int> RemoveFromSelectionAsync(int selectionId, int[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromPageS" +
            "election", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromPageS" +
            "electionResponse")]
        int RemoveFromPageSelection(int selectionId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromPageS" +
            "election", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromPageS" +
            "electionResponse")]
        System.Threading.Tasks.Task<int> RemoveFromPageSelectionAsync(int selectionId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSubpa" +
            "geSelection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSubpa" +
            "geSelectionResponse")]
        int RemoveFromSubpageSelection(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSubpa" +
            "geSelection", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveFromSubpa" +
            "geSelectionResponse")]
        System.Threading.Tasks.Task<int> RemoveFromSubpageSelectionAsync(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageHistory", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageHistoryR" +
            "esponse")]
        MinistryPlatform.Translation.PlatformService.AuditMaster[] GetPageHistory(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageHistory", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageHistoryR" +
            "esponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.AuditMaster[]> GetPageHistoryAsync(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageHisto" +
            "ry", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageHisto" +
            "ryResponse")]
        MinistryPlatform.Translation.PlatformService.AuditMaster[] GetSubpageHistory(int subpageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageHisto" +
            "ry", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetSubpageHisto" +
            "ryResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.AuditMaster[]> GetSubpageHistoryAsync(int subpageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateFileRespo" +
            "nse")]
        MinistryPlatform.Translation.PlatformService.FileDescription CreateFile(int pageId, int recordId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateFileRespo" +
            "nse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> CreateFileAsync(int pageId, int recordId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyFileRespons" +
            "e")]
        MinistryPlatform.Translation.PlatformService.FileDescription CopyFile(int pageId, int recordId, int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CopyFileRespons" +
            "e")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> CopyFileAsync(int pageId, int recordId, int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateFileRespo" +
            "nse")]
        void UpdateFile(int fileId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateFileRespo" +
            "nse")]
        System.Threading.Tasks.Task UpdateFileAsync(int fileId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/SetDefaultImage" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/SetDefaultImage" +
            "Response")]
        void SetDefaultImage(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/SetDefaultImage" +
            "", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/SetDefaultImage" +
            "Response")]
        System.Threading.Tasks.Task SetDefaultImageAsync(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteFileRespo" +
            "nse")]
        void DeleteFile(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteFileRespo" +
            "nse")]
        System.Threading.Tasks.Task DeleteFileAsync(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionResponse")]
        MinistryPlatform.Translation.PlatformService.FileDescription GetFileDescription(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> GetFileDescriptionAsync(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionByUniqueId", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionByUniqueIdResponse")]
        MinistryPlatform.Translation.PlatformService.FileDescription GetFileDescriptionByUniqueId(System.Guid uniqueFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionByUniqueId", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionByUniqueIdResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> GetFileDescriptionByUniqueIdAsync(System.Guid uniqueFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ions", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionsResponse")]
        MinistryPlatform.Translation.PlatformService.FileDescription[] GetFileDescriptions(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ions", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileDescript" +
            "ionsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription[]> GetFileDescriptionsAsync(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileResponse" +
            "")]
        System.IO.Stream GetFile(int fileId, bool thumbnail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFile", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetFileResponse" +
            "")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFileAsync(int fileId, bool thumbnail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetContactMerge" +
            "Fields", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetContactMerge" +
            "FieldsResponse")]
        string[] GetContactMergeFields();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetContactMerge" +
            "Fields", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetContactMerge" +
            "FieldsResponse")]
        System.Threading.Tasks.Task<string[]> GetContactMergeFieldsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippets", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippetsResponse")]
        MinistryPlatform.Translation.PlatformService.Item[] GetCommunicationSnippets(int pageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippets", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippetsResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Item[]> GetCommunicationSnippetsAsync(int pageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippet", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippetResponse")]
        MinistryPlatform.Translation.PlatformService.CommunicationSnippet GetCommunicationSnippet(int snippetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippet", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nSnippetResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.CommunicationSnippet> GetCommunicationSnippetAsync(int snippetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nTemplates", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nTemplatesResponse")]
        MinistryPlatform.Translation.PlatformService.Item[] GetCommunicationTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nTemplates", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nTemplatesResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Item[]> GetCommunicationTemplatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "n", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nResponse")]
        MinistryPlatform.Translation.PlatformService.Communication GetCommunication(int communicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "n", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCommunicatio" +
            "nResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Communication> GetCommunicationAsync(int communicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateC" +
            "ommunication", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateC" +
            "ommunicationResponse")]
        int CreateOrUpdateCommunication(MinistryPlatform.Translation.PlatformService.Communication communication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateC" +
            "ommunication", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateC" +
            "ommunicationResponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateCommunicationAsync(MinistryPlatform.Translation.PlatformService.Communication communication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteCommunica" +
            "tion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteCommunica" +
            "tionResponse")]
        void DeleteCommunication(int communicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteCommunica" +
            "tion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/DeleteCommunica" +
            "tionResponse")]
        System.Threading.Tasks.Task DeleteCommunicationAsync(int communicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ValidateCommuni" +
            "cation", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ValidateCommuni" +
            "cationResponse")]
        MinistryPlatform.Translation.PlatformService.ValidationErrorInfo[] ValidateCommunication(MinistryPlatform.Translation.PlatformService.Communication communication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ValidateCommuni" +
            "cation", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/ValidateCommuni" +
            "cationResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.ValidationErrorInfo[]> ValidateCommunicationAsync(MinistryPlatform.Translation.PlatformService.Communication communication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/PreviewCommunic" +
            "ation", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/PreviewCommunic" +
            "ationResponse")]
        MinistryPlatform.Translation.PlatformService.CommunicationMessage[] PreviewCommunication(MinistryPlatform.Translation.PlatformService.Communication communication, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/PreviewCommunic" +
            "ation", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/PreviewCommunic" +
            "ationResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.CommunicationMessage[]> PreviewCommunicationAsync(MinistryPlatform.Translation.PlatformService.Communication communication, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RenderCommunica" +
            "tion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RenderCommunica" +
            "tionResponse")]
        void RenderCommunication(int communicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RenderCommunica" +
            "tion", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RenderCommunica" +
            "tionResponse")]
        System.Threading.Tasks.Task RenderCommunicationAsync(int communicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetTaskResponse" +
            "")]
        MinistryPlatform.Translation.PlatformService.Task GetTask(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetTaskResponse" +
            "")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Task> GetTaskAsync(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordTa" +
            "sks", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordTa" +
            "sksResponse")]
        MinistryPlatform.Translation.PlatformService.Task[] GetPageRecordTasks(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordTa" +
            "sks", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetPageRecordTa" +
            "sksResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Task[]> GetPageRecordTasksAsync(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetUserTaskCoun" +
            "t", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetUserTaskCoun" +
            "tResponse")]
        MinistryPlatform.Translation.PlatformService.TaskCount[] GetUserTaskCount(int selectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetUserTaskCoun" +
            "t", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetUserTaskCoun" +
            "tResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.TaskCount[]> GetUserTaskCountAsync(int selectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateTaskRespo" +
            "nse")]
        int CreateTask(string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<int> pageId, System.Nullable<int> recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateTaskRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> CreateTaskAsync(string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<int> pageId, System.Nullable<int> recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateTaskRespo" +
            "nse")]
        void UpdateTask(int taskId, string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateTaskRespo" +
            "nse")]
        System.Threading.Tasks.Task UpdateTaskAsync(int taskId, string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTaskRes" +
            "ponse")]
        void CompleteTask(int taskId, bool rejected, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTask", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTaskRes" +
            "ponse")]
        System.Threading.Tasks.Task CompleteTaskAsync(int taskId, bool rejected, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTasks", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTasksRe" +
            "sponse")]
        void CompleteTasks(int selectionId, bool complete, bool submit, bool approve, bool reject, string rejectionComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTasks", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CompleteTasksRe" +
            "sponse")]
        System.Threading.Tasks.Task CompleteTasksAsync(int selectionId, bool complete, bool submit, bool approve, bool reject, string rejectionComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetRolePages", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetRolePagesRes" +
            "ponse")]
        MinistryPlatform.Translation.PlatformService.RolePage[] GetRolePages(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetRolePages", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetRolePagesRes" +
            "ponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.RolePage[]> GetRolePagesAsync(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateR" +
            "olePages", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateR" +
            "olePagesResponse")]
        void CreateOrUpdateRolePages(int roleId, MinistryPlatform.Translation.PlatformService.RolePage[] pages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateR" +
            "olePages", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/CreateOrUpdateR" +
            "olePagesResponse")]
        System.Threading.Tasks.Task CreateOrUpdateRolePagesAsync(int roleId, MinistryPlatform.Translation.PlatformService.RolePage[] pages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddSelectionSec" +
            "urity", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddSelectionSec" +
            "urityResponse")]
        void AddSelectionSecurity(int recordsSelectionId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddSelectionSec" +
            "urity", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddSelectionSec" +
            "urityResponse")]
        System.Threading.Tasks.Task AddSelectionSecurityAsync(int recordsSelectionId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveSelection" +
            "Security", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveSelection" +
            "SecurityResponse")]
        void RemoveSelectionSecurity(int recordsSelectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveSelection" +
            "Security", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemoveSelection" +
            "SecurityResponse")]
        System.Threading.Tasks.Task RemoveSelectionSecurityAsync(int recordsSelectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddPageRecordSe" +
            "curity", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddPageRecordSe" +
            "curityResponse")]
        void AddPageRecordSecurity(int pageId, int recordId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddPageRecordSe" +
            "curity", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/AddPageRecordSe" +
            "curityResponse")]
        System.Threading.Tasks.Task AddPageRecordSecurityAsync(int pageId, int recordId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemovePageRecor" +
            "dSecurity", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemovePageRecor" +
            "dSecurityResponse")]
        void RemovePageRecordSecurity(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemovePageRecor" +
            "dSecurity", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/RemovePageRecor" +
            "dSecurityResponse")]
        System.Threading.Tasks.Task RemovePageRecordSecurityAsync(int pageId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCurrentUserI" +
            "nfo", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCurrentUserI" +
            "nfoResponse")]
        MinistryPlatform.Translation.PlatformService.UserInfo GetCurrentUserInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCurrentUserI" +
            "nfo", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/GetCurrentUserI" +
            "nfoResponse")]
        System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.UserInfo> GetCurrentUserInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateCurrentUs" +
            "erInfo", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateCurrentUs" +
            "erInfoResponse")]
        void UpdateCurrentUserInfo(MinistryPlatform.Translation.PlatformService.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateCurrentUs" +
            "erInfo", ReplyAction="http://www.thinkministry.com/dataplatform/2012/10/PlatformService/UpdateCurrentUs" +
            "erInfoResponse")]
        System.Threading.Tasks.Task UpdateCurrentUserInfoAsync(MinistryPlatform.Translation.PlatformService.UserInfo userInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PlatformServiceChannel : MinistryPlatform.Translation.PlatformService.PlatformService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlatformServiceClient : System.ServiceModel.ClientBase<MinistryPlatform.Translation.PlatformService.PlatformService>, MinistryPlatform.Translation.PlatformService.PlatformService {
        
        public PlatformServiceClient() {
        }
        
        public PlatformServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlatformServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreatePageRecord(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.CreatePageRecord(pageId, values, quickAdd);
        }
        
        public System.Threading.Tasks.Task<int> CreatePageRecordAsync(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.CreatePageRecordAsync(pageId, values, quickAdd);
        }
        
        public void UpdatePageRecord(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            base.Channel.UpdatePageRecord(pageId, values, quickAdd);
        }
        
        public System.Threading.Tasks.Task UpdatePageRecordAsync(int pageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.UpdatePageRecordAsync(pageId, values, quickAdd);
        }
        
        public void DeletePageRecord(int pageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options) {
            base.Channel.DeletePageRecord(pageId, recordId, options);
        }
        
        public System.Threading.Tasks.Task DeletePageRecordAsync(int pageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options) {
            return base.Channel.DeletePageRecordAsync(pageId, recordId, options);
        }
        
        public int CreateSubpageRecord(int subpageId, int parentRecordId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.CreateSubpageRecord(subpageId, parentRecordId, values, quickAdd);
        }
        
        public System.Threading.Tasks.Task<int> CreateSubpageRecordAsync(int subpageId, int parentRecordId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.CreateSubpageRecordAsync(subpageId, parentRecordId, values, quickAdd);
        }
        
        public int[] CreateSubpageRecords(int subpageId, int parentRecordId, int selectionId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.CreateSubpageRecords(subpageId, parentRecordId, selectionId, values, quickAdd);
        }
        
        public System.Threading.Tasks.Task<int[]> CreateSubpageRecordsAsync(int subpageId, int parentRecordId, int selectionId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.CreateSubpageRecordsAsync(subpageId, parentRecordId, selectionId, values, quickAdd);
        }
        
        public void UpdateSubpageRecord(int subpageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            base.Channel.UpdateSubpageRecord(subpageId, values, quickAdd);
        }
        
        public System.Threading.Tasks.Task UpdateSubpageRecordAsync(int subpageId, System.Collections.Generic.Dictionary<string, object> values, bool quickAdd) {
            return base.Channel.UpdateSubpageRecordAsync(subpageId, values, quickAdd);
        }
        
        public void DeleteSubpageRecord(int subpageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options) {
            base.Channel.DeleteSubpageRecord(subpageId, recordId, options);
        }
        
        public System.Threading.Tasks.Task DeleteSubpageRecordAsync(int subpageId, int recordId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options) {
            return base.Channel.DeleteSubpageRecordAsync(subpageId, recordId, options);
        }
        
        public void UpdateSelectionRecords(int selectionId, MinistryPlatform.Translation.PlatformService.FieldValue[] values) {
            base.Channel.UpdateSelectionRecords(selectionId, values);
        }
        
        public System.Threading.Tasks.Task UpdateSelectionRecordsAsync(int selectionId, MinistryPlatform.Translation.PlatformService.FieldValue[] values) {
            return base.Channel.UpdateSelectionRecordsAsync(selectionId, values);
        }
        
        public void DeleteSelectionRecords(int selectionId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options) {
            base.Channel.DeleteSelectionRecords(selectionId, options);
        }
        
        public System.Threading.Tasks.Task DeleteSelectionRecordsAsync(int selectionId, MinistryPlatform.Translation.PlatformService.DeleteOption[] options) {
            return base.Channel.DeleteSelectionRecordsAsync(selectionId, options);
        }
        
        public void CopyPageRecord(int pageId, int recordId, int[] subpages, System.DateTime[] startDateTimes, bool updateOriginalRecord) {
            base.Channel.CopyPageRecord(pageId, recordId, subpages, startDateTimes, updateOriginalRecord);
        }
        
        public System.Threading.Tasks.Task CopyPageRecordAsync(int pageId, int recordId, int[] subpages, System.DateTime[] startDateTimes, bool updateOriginalRecord) {
            return base.Channel.CopyPageRecordAsync(pageId, recordId, subpages, startDateTimes, updateOriginalRecord);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageRecord(int pageId, int recordId, bool quickAdd) {
            return base.Channel.GetPageRecord(pageId, recordId, quickAdd);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageRecordAsync(int pageId, int recordId, bool quickAdd) {
            return base.Channel.GetPageRecordAsync(pageId, recordId, quickAdd);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageLookupRecords(int pageId, string search, string sort, int top) {
            return base.Channel.GetPageLookupRecords(pageId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageLookupRecordsAsync(int pageId, string search, string sort, int top) {
            return base.Channel.GetPageLookupRecordsAsync(pageId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageLookupRecords(int subpageId, int parentRecordId, string search, string sort, int top) {
            return base.Channel.GetSubpageLookupRecords(subpageId, parentRecordId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageLookupRecordsAsync(int subpageId, int parentRecordId, string search, string sort, int top) {
            return base.Channel.GetSubpageLookupRecordsAsync(subpageId, parentRecordId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageRecords(int pageId, string search, string sort, int top) {
            return base.Channel.GetPageRecords(pageId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageRecordsAsync(int pageId, string search, string sort, int top) {
            return base.Channel.GetPageRecordsAsync(pageId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageCalendarRecords(int pageId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetPageCalendarRecords(pageId, search, startDateTime, endDateTime, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageCalendarRecordsAsync(int pageId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetPageCalendarRecordsAsync(pageId, search, startDateTime, endDateTime, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageViewRecords(int viewId, string search, string sort, int top) {
            return base.Channel.GetPageViewRecords(viewId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageViewRecordsAsync(int viewId, string search, string sort, int top) {
            return base.Channel.GetPageViewRecordsAsync(viewId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetPageViewCalendarRecords(int viewId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetPageViewCalendarRecords(viewId, search, startDateTime, endDateTime, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetPageViewCalendarRecordsAsync(int viewId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetPageViewCalendarRecordsAsync(viewId, search, startDateTime, endDateTime, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageRecord(int subpageId, int recordId, bool quickAdd) {
            return base.Channel.GetSubpageRecord(subpageId, recordId, quickAdd);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageRecordAsync(int subpageId, int recordId, bool quickAdd) {
            return base.Channel.GetSubpageRecordAsync(subpageId, recordId, quickAdd);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageRecords(int subpageId, int parentRecordId, string search, string sort, int top) {
            return base.Channel.GetSubpageRecords(subpageId, parentRecordId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageRecordsAsync(int subpageId, int parentRecordId, string search, string sort, int top) {
            return base.Channel.GetSubpageRecordsAsync(subpageId, parentRecordId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageCalendarRecords(int subpageId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetSubpageCalendarRecords(subpageId, parentRecordId, search, startDateTime, endDateTime, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageCalendarRecordsAsync(int subpageId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetSubpageCalendarRecordsAsync(subpageId, parentRecordId, search, startDateTime, endDateTime, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageViewRecords(int viewId, int parentRecordId, string search, string sort, int top) {
            return base.Channel.GetSubpageViewRecords(viewId, parentRecordId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageViewRecordsAsync(int viewId, int parentRecordId, string search, string sort, int top) {
            return base.Channel.GetSubpageViewRecordsAsync(viewId, parentRecordId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSubpageViewCalendarRecords(int viewId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetSubpageViewCalendarRecords(viewId, parentRecordId, search, startDateTime, endDateTime, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSubpageViewCalendarRecordsAsync(int viewId, int parentRecordId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetSubpageViewCalendarRecordsAsync(viewId, parentRecordId, search, startDateTime, endDateTime, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSelectionRecords(int selectionId, string search, string sort, int top) {
            return base.Channel.GetSelectionRecords(selectionId, search, sort, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSelectionRecordsAsync(int selectionId, string search, string sort, int top) {
            return base.Channel.GetSelectionRecordsAsync(selectionId, search, sort, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectQueryResult GetSelectionCalendarRecords(int selectionId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetSelectionCalendarRecords(selectionId, search, startDateTime, endDateTime, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectQueryResult> GetSelectionCalendarRecordsAsync(int selectionId, string search, System.DateTime startDateTime, System.DateTime endDateTime, int top) {
            return base.Channel.GetSelectionCalendarRecordsAsync(selectionId, search, startDateTime, endDateTime, top);
        }
        
        public MinistryPlatform.Translation.PlatformService.Item[] GetQuickAddPages() {
            return base.Channel.GetQuickAddPages();
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Item[]> GetQuickAddPagesAsync() {
            return base.Channel.GetQuickAddPagesAsync();
        }
        
        public MinistryPlatform.Translation.PlatformService.SubpageItem[] GetQuickAddSubpages(int pageId) {
            return base.Channel.GetQuickAddSubpages(pageId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SubpageItem[]> GetQuickAddSubpagesAsync(int pageId) {
            return base.Channel.GetQuickAddSubpagesAsync(pageId);
        }
        
        public MinistryPlatform.Translation.PlatformService.Bookmark[] GetBookmarks() {
            return base.Channel.GetBookmarks();
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Bookmark[]> GetBookmarksAsync() {
            return base.Channel.GetBookmarksAsync();
        }
        
        public MinistryPlatform.Translation.PlatformService.PageSection[] GetPageSections() {
            return base.Channel.GetPageSections();
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.PageSection[]> GetPageSectionsAsync() {
            return base.Channel.GetPageSectionsAsync();
        }
        
        public MinistryPlatform.Translation.PlatformService.Page GetPage(int pageId) {
            return base.Channel.GetPage(pageId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Page> GetPageAsync(int pageId) {
            return base.Channel.GetPageAsync(pageId);
        }
        
        public MinistryPlatform.Translation.PlatformService.Page GetPageBySystemName(string systemName) {
            return base.Channel.GetPageBySystemName(systemName);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Page> GetPageBySystemNameAsync(string systemName) {
            return base.Channel.GetPageBySystemNameAsync(systemName);
        }
        
        public MinistryPlatform.Translation.PlatformService.Subpage GetSubpage(int subpageId, int parentRecordId) {
            return base.Channel.GetSubpage(subpageId, parentRecordId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Subpage> GetSubpageAsync(int subpageId, int parentRecordId) {
            return base.Channel.GetSubpageAsync(subpageId, parentRecordId);
        }
        
        public MinistryPlatform.Translation.PlatformService.Subpage GetSubpageBySystemName(string systemName, int parentRecordId) {
            return base.Channel.GetSubpageBySystemName(systemName, parentRecordId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Subpage> GetSubpageBySystemNameAsync(string systemName, int parentRecordId) {
            return base.Channel.GetSubpageBySystemNameAsync(systemName, parentRecordId);
        }
        
        public int CreateSelection(MinistryPlatform.Translation.PlatformService.SelectionDescription selection) {
            return base.Channel.CreateSelection(selection);
        }
        
        public System.Threading.Tasks.Task<int> CreateSelectionAsync(MinistryPlatform.Translation.PlatformService.SelectionDescription selection) {
            return base.Channel.CreateSelectionAsync(selection);
        }
        
        public void UpdateSelectionName(int selectionId, string name) {
            base.Channel.UpdateSelectionName(selectionId, name);
        }
        
        public System.Threading.Tasks.Task UpdateSelectionNameAsync(int selectionId, string name) {
            return base.Channel.UpdateSelectionNameAsync(selectionId, name);
        }
        
        public void DeleteSelection(int selectionId) {
            base.Channel.DeleteSelection(selectionId);
        }
        
        public System.Threading.Tasks.Task DeleteSelectionAsync(int selectionId) {
            return base.Channel.DeleteSelectionAsync(selectionId);
        }
        
        public MinistryPlatform.Translation.PlatformService.SelectionDescription GetSelection(int selectionId) {
            return base.Channel.GetSelection(selectionId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.SelectionDescription> GetSelectionAsync(int selectionId) {
            return base.Channel.GetSelectionAsync(selectionId);
        }
        
        public void ClearSelections() {
            base.Channel.ClearSelections();
        }
        
        public System.Threading.Tasks.Task ClearSelectionsAsync() {
            return base.Channel.ClearSelectionsAsync();
        }
        
        public int AddToSelection(int selectionId, bool quickAdd, int[] records) {
            return base.Channel.AddToSelection(selectionId, quickAdd, records);
        }
        
        public System.Threading.Tasks.Task<int> AddToSelectionAsync(int selectionId, bool quickAdd, int[] records) {
            return base.Channel.AddToSelectionAsync(selectionId, quickAdd, records);
        }
        
        public int MoveToSelection(int sourceSelectionId, int targetSelectionId, bool moveRecords) {
            return base.Channel.MoveToSelection(sourceSelectionId, targetSelectionId, moveRecords);
        }
        
        public System.Threading.Tasks.Task<int> MoveToSelectionAsync(int sourceSelectionId, int targetSelectionId, bool moveRecords) {
            return base.Channel.MoveToSelectionAsync(sourceSelectionId, targetSelectionId, moveRecords);
        }
        
        public int AddToPageSelection(int selectionId, string search, System.Nullable<int> viewId) {
            return base.Channel.AddToPageSelection(selectionId, search, viewId);
        }
        
        public System.Threading.Tasks.Task<int> AddToPageSelectionAsync(int selectionId, string search, System.Nullable<int> viewId) {
            return base.Channel.AddToPageSelectionAsync(selectionId, search, viewId);
        }
        
        public int TransferToPageSelection(int sourceSelectionId, int targetSelectionId, MinistryPlatform.Translation.PlatformService.Traverse[] path) {
            return base.Channel.TransferToPageSelection(sourceSelectionId, targetSelectionId, path);
        }
        
        public System.Threading.Tasks.Task<int> TransferToPageSelectionAsync(int sourceSelectionId, int targetSelectionId, MinistryPlatform.Translation.PlatformService.Traverse[] path) {
            return base.Channel.TransferToPageSelectionAsync(sourceSelectionId, targetSelectionId, path);
        }
        
        public int AddToSubpageSelection(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId) {
            return base.Channel.AddToSubpageSelection(selectionId, parentRecordId, search, viewId);
        }
        
        public System.Threading.Tasks.Task<int> AddToSubpageSelectionAsync(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId) {
            return base.Channel.AddToSubpageSelectionAsync(selectionId, parentRecordId, search, viewId);
        }
        
        public int RemoveFromSelection(int selectionId, int[] records) {
            return base.Channel.RemoveFromSelection(selectionId, records);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFromSelectionAsync(int selectionId, int[] records) {
            return base.Channel.RemoveFromSelectionAsync(selectionId, records);
        }
        
        public int RemoveFromPageSelection(int selectionId, string search, System.Nullable<int> viewId) {
            return base.Channel.RemoveFromPageSelection(selectionId, search, viewId);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFromPageSelectionAsync(int selectionId, string search, System.Nullable<int> viewId) {
            return base.Channel.RemoveFromPageSelectionAsync(selectionId, search, viewId);
        }
        
        public int RemoveFromSubpageSelection(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId) {
            return base.Channel.RemoveFromSubpageSelection(selectionId, parentRecordId, search, viewId);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFromSubpageSelectionAsync(int selectionId, int parentRecordId, string search, System.Nullable<int> viewId) {
            return base.Channel.RemoveFromSubpageSelectionAsync(selectionId, parentRecordId, search, viewId);
        }
        
        public MinistryPlatform.Translation.PlatformService.AuditMaster[] GetPageHistory(int pageId, int recordId) {
            return base.Channel.GetPageHistory(pageId, recordId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.AuditMaster[]> GetPageHistoryAsync(int pageId, int recordId) {
            return base.Channel.GetPageHistoryAsync(pageId, recordId);
        }
        
        public MinistryPlatform.Translation.PlatformService.AuditMaster[] GetSubpageHistory(int subpageId, int recordId) {
            return base.Channel.GetSubpageHistory(subpageId, recordId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.AuditMaster[]> GetSubpageHistoryAsync(int subpageId, int recordId) {
            return base.Channel.GetSubpageHistoryAsync(subpageId, recordId);
        }
        
        public MinistryPlatform.Translation.PlatformService.FileDescription CreateFile(int pageId, int recordId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file) {
            return base.Channel.CreateFile(pageId, recordId, fileName, description, isDefaultImage, longestDimension, file);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> CreateFileAsync(int pageId, int recordId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file) {
            return base.Channel.CreateFileAsync(pageId, recordId, fileName, description, isDefaultImage, longestDimension, file);
        }
        
        public MinistryPlatform.Translation.PlatformService.FileDescription CopyFile(int pageId, int recordId, int fileId) {
            return base.Channel.CopyFile(pageId, recordId, fileId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> CopyFileAsync(int pageId, int recordId, int fileId) {
            return base.Channel.CopyFileAsync(pageId, recordId, fileId);
        }
        
        public void UpdateFile(int fileId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file) {
            base.Channel.UpdateFile(fileId, fileName, description, isDefaultImage, longestDimension, file);
        }
        
        public System.Threading.Tasks.Task UpdateFileAsync(int fileId, string fileName, string description, bool isDefaultImage, int longestDimension, byte[] file) {
            return base.Channel.UpdateFileAsync(fileId, fileName, description, isDefaultImage, longestDimension, file);
        }
        
        public void SetDefaultImage(int fileId) {
            base.Channel.SetDefaultImage(fileId);
        }
        
        public System.Threading.Tasks.Task SetDefaultImageAsync(int fileId) {
            return base.Channel.SetDefaultImageAsync(fileId);
        }
        
        public void DeleteFile(int fileId) {
            base.Channel.DeleteFile(fileId);
        }
        
        public System.Threading.Tasks.Task DeleteFileAsync(int fileId) {
            return base.Channel.DeleteFileAsync(fileId);
        }
        
        public MinistryPlatform.Translation.PlatformService.FileDescription GetFileDescription(int fileId) {
            return base.Channel.GetFileDescription(fileId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> GetFileDescriptionAsync(int fileId) {
            return base.Channel.GetFileDescriptionAsync(fileId);
        }
        
        public MinistryPlatform.Translation.PlatformService.FileDescription GetFileDescriptionByUniqueId(System.Guid uniqueFileId) {
            return base.Channel.GetFileDescriptionByUniqueId(uniqueFileId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription> GetFileDescriptionByUniqueIdAsync(System.Guid uniqueFileId) {
            return base.Channel.GetFileDescriptionByUniqueIdAsync(uniqueFileId);
        }
        
        public MinistryPlatform.Translation.PlatformService.FileDescription[] GetFileDescriptions(int pageId, int recordId) {
            return base.Channel.GetFileDescriptions(pageId, recordId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.FileDescription[]> GetFileDescriptionsAsync(int pageId, int recordId) {
            return base.Channel.GetFileDescriptionsAsync(pageId, recordId);
        }
        
        public System.IO.Stream GetFile(int fileId, bool thumbnail) {
            return base.Channel.GetFile(fileId, thumbnail);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFileAsync(int fileId, bool thumbnail) {
            return base.Channel.GetFileAsync(fileId, thumbnail);
        }
        
        public string[] GetContactMergeFields() {
            return base.Channel.GetContactMergeFields();
        }
        
        public System.Threading.Tasks.Task<string[]> GetContactMergeFieldsAsync() {
            return base.Channel.GetContactMergeFieldsAsync();
        }
        
        public MinistryPlatform.Translation.PlatformService.Item[] GetCommunicationSnippets(int pageId) {
            return base.Channel.GetCommunicationSnippets(pageId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Item[]> GetCommunicationSnippetsAsync(int pageId) {
            return base.Channel.GetCommunicationSnippetsAsync(pageId);
        }
        
        public MinistryPlatform.Translation.PlatformService.CommunicationSnippet GetCommunicationSnippet(int snippetId) {
            return base.Channel.GetCommunicationSnippet(snippetId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.CommunicationSnippet> GetCommunicationSnippetAsync(int snippetId) {
            return base.Channel.GetCommunicationSnippetAsync(snippetId);
        }
        
        public MinistryPlatform.Translation.PlatformService.Item[] GetCommunicationTemplates() {
            return base.Channel.GetCommunicationTemplates();
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Item[]> GetCommunicationTemplatesAsync() {
            return base.Channel.GetCommunicationTemplatesAsync();
        }
        
        public MinistryPlatform.Translation.PlatformService.Communication GetCommunication(int communicationId) {
            return base.Channel.GetCommunication(communicationId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Communication> GetCommunicationAsync(int communicationId) {
            return base.Channel.GetCommunicationAsync(communicationId);
        }
        
        public int CreateOrUpdateCommunication(MinistryPlatform.Translation.PlatformService.Communication communication) {
            return base.Channel.CreateOrUpdateCommunication(communication);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateCommunicationAsync(MinistryPlatform.Translation.PlatformService.Communication communication) {
            return base.Channel.CreateOrUpdateCommunicationAsync(communication);
        }
        
        public void DeleteCommunication(int communicationId) {
            base.Channel.DeleteCommunication(communicationId);
        }
        
        public System.Threading.Tasks.Task DeleteCommunicationAsync(int communicationId) {
            return base.Channel.DeleteCommunicationAsync(communicationId);
        }
        
        public MinistryPlatform.Translation.PlatformService.ValidationErrorInfo[] ValidateCommunication(MinistryPlatform.Translation.PlatformService.Communication communication) {
            return base.Channel.ValidateCommunication(communication);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.ValidationErrorInfo[]> ValidateCommunicationAsync(MinistryPlatform.Translation.PlatformService.Communication communication) {
            return base.Channel.ValidateCommunicationAsync(communication);
        }
        
        public MinistryPlatform.Translation.PlatformService.CommunicationMessage[] PreviewCommunication(MinistryPlatform.Translation.PlatformService.Communication communication, int top) {
            return base.Channel.PreviewCommunication(communication, top);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.CommunicationMessage[]> PreviewCommunicationAsync(MinistryPlatform.Translation.PlatformService.Communication communication, int top) {
            return base.Channel.PreviewCommunicationAsync(communication, top);
        }
        
        public void RenderCommunication(int communicationId) {
            base.Channel.RenderCommunication(communicationId);
        }
        
        public System.Threading.Tasks.Task RenderCommunicationAsync(int communicationId) {
            return base.Channel.RenderCommunicationAsync(communicationId);
        }
        
        public MinistryPlatform.Translation.PlatformService.Task GetTask(int taskId) {
            return base.Channel.GetTask(taskId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Task> GetTaskAsync(int taskId) {
            return base.Channel.GetTaskAsync(taskId);
        }
        
        public MinistryPlatform.Translation.PlatformService.Task[] GetPageRecordTasks(int pageId, int recordId) {
            return base.Channel.GetPageRecordTasks(pageId, recordId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.Task[]> GetPageRecordTasksAsync(int pageId, int recordId) {
            return base.Channel.GetPageRecordTasksAsync(pageId, recordId);
        }
        
        public MinistryPlatform.Translation.PlatformService.TaskCount[] GetUserTaskCount(int selectionId) {
            return base.Channel.GetUserTaskCount(selectionId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.TaskCount[]> GetUserTaskCountAsync(int selectionId) {
            return base.Channel.GetUserTaskCountAsync(selectionId);
        }
        
        public int CreateTask(string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<int> pageId, System.Nullable<int> recordId) {
            return base.Channel.CreateTask(taskName, description, ownerId, startDate, endDate, pageId, recordId);
        }
        
        public System.Threading.Tasks.Task<int> CreateTaskAsync(string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<int> pageId, System.Nullable<int> recordId) {
            return base.Channel.CreateTaskAsync(taskName, description, ownerId, startDate, endDate, pageId, recordId);
        }
        
        public void UpdateTask(int taskId, string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            base.Channel.UpdateTask(taskId, taskName, description, ownerId, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task UpdateTaskAsync(int taskId, string taskName, string description, int ownerId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.UpdateTaskAsync(taskId, taskName, description, ownerId, startDate, endDate);
        }
        
        public void CompleteTask(int taskId, bool rejected, string comments) {
            base.Channel.CompleteTask(taskId, rejected, comments);
        }
        
        public System.Threading.Tasks.Task CompleteTaskAsync(int taskId, bool rejected, string comments) {
            return base.Channel.CompleteTaskAsync(taskId, rejected, comments);
        }
        
        public void CompleteTasks(int selectionId, bool complete, bool submit, bool approve, bool reject, string rejectionComments) {
            base.Channel.CompleteTasks(selectionId, complete, submit, approve, reject, rejectionComments);
        }
        
        public System.Threading.Tasks.Task CompleteTasksAsync(int selectionId, bool complete, bool submit, bool approve, bool reject, string rejectionComments) {
            return base.Channel.CompleteTasksAsync(selectionId, complete, submit, approve, reject, rejectionComments);
        }
        
        public MinistryPlatform.Translation.PlatformService.RolePage[] GetRolePages(int roleId) {
            return base.Channel.GetRolePages(roleId);
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.RolePage[]> GetRolePagesAsync(int roleId) {
            return base.Channel.GetRolePagesAsync(roleId);
        }
        
        public void CreateOrUpdateRolePages(int roleId, MinistryPlatform.Translation.PlatformService.RolePage[] pages) {
            base.Channel.CreateOrUpdateRolePages(roleId, pages);
        }
        
        public System.Threading.Tasks.Task CreateOrUpdateRolePagesAsync(int roleId, MinistryPlatform.Translation.PlatformService.RolePage[] pages) {
            return base.Channel.CreateOrUpdateRolePagesAsync(roleId, pages);
        }
        
        public void AddSelectionSecurity(int recordsSelectionId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess) {
            base.Channel.AddSelectionSecurity(recordsSelectionId, usersSelectionId, userGroupsSelectionId, denyAccess);
        }
        
        public System.Threading.Tasks.Task AddSelectionSecurityAsync(int recordsSelectionId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess) {
            return base.Channel.AddSelectionSecurityAsync(recordsSelectionId, usersSelectionId, userGroupsSelectionId, denyAccess);
        }
        
        public void RemoveSelectionSecurity(int recordsSelectionId) {
            base.Channel.RemoveSelectionSecurity(recordsSelectionId);
        }
        
        public System.Threading.Tasks.Task RemoveSelectionSecurityAsync(int recordsSelectionId) {
            return base.Channel.RemoveSelectionSecurityAsync(recordsSelectionId);
        }
        
        public void AddPageRecordSecurity(int pageId, int recordId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess) {
            base.Channel.AddPageRecordSecurity(pageId, recordId, usersSelectionId, userGroupsSelectionId, denyAccess);
        }
        
        public System.Threading.Tasks.Task AddPageRecordSecurityAsync(int pageId, int recordId, System.Nullable<int> usersSelectionId, System.Nullable<int> userGroupsSelectionId, bool denyAccess) {
            return base.Channel.AddPageRecordSecurityAsync(pageId, recordId, usersSelectionId, userGroupsSelectionId, denyAccess);
        }
        
        public void RemovePageRecordSecurity(int pageId, int recordId) {
            base.Channel.RemovePageRecordSecurity(pageId, recordId);
        }
        
        public System.Threading.Tasks.Task RemovePageRecordSecurityAsync(int pageId, int recordId) {
            return base.Channel.RemovePageRecordSecurityAsync(pageId, recordId);
        }
        
        public MinistryPlatform.Translation.PlatformService.UserInfo GetCurrentUserInfo() {
            return base.Channel.GetCurrentUserInfo();
        }
        
        public System.Threading.Tasks.Task<MinistryPlatform.Translation.PlatformService.UserInfo> GetCurrentUserInfoAsync() {
            return base.Channel.GetCurrentUserInfoAsync();
        }
        
        public void UpdateCurrentUserInfo(MinistryPlatform.Translation.PlatformService.UserInfo userInfo) {
            base.Channel.UpdateCurrentUserInfo(userInfo);
        }
        
        public System.Threading.Tasks.Task UpdateCurrentUserInfoAsync(MinistryPlatform.Translation.PlatformService.UserInfo userInfo) {
            return base.Channel.UpdateCurrentUserInfoAsync(userInfo);
        }
    }
}
